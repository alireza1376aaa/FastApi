### 🚀 **تمرین‌های FastAPI برای درک بهتر مفاهیم** 🎯  
برای اینکه مهارتت در **FastAPI** قوی‌تر بشه، اینجا چند تمرین بر اساس مباحثی که یاد گرفتی آوردم.  
✅ **سعی کن خودت حل کنی و بعد اگر نیاز داشتی، از من کمک بگیر!** 😍🔥  

---

## **1️⃣ تمرین: دریافت و ارسال اطلاعات ساده**
### **📌 درخواست:**  
یک **API** طراحی کن که وقتی مسیر `/hello/{name}` را درخواست می‌کنیم، پیام **"سلام {name}"** را به‌صورت JSON برگرداند.  

### **🎯 مثال ورودی و خروجی:**  
🔹 درخواست: `/hello/Ali`  
🔹 خروجی:
```json
{
  "message": "سلام Ali"
}
```

---

## **2️⃣ تمرین: اعتبارسنجی داده‌های ورودی**
### **📌 درخواست:**  
یک مسیر **POST** با آدرس `/user/` ایجاد کن که اطلاعات یک کاربر را در قالب **JSON** دریافت کند.  
✅ باید مدل `User` را با **Pydantic** طراحی کنی که شامل اطلاعات زیر باشد:
- `name` (رشته)
- `age` (عدد صحیح، حداقل 18 سال)
- `email` (رشته، باید فرمت ایمیل داشته باشد)

### **🎯 مثال درخواست و پاسخ:**  
🔹 **درخواست:**
```json
{
  "name": "Ali",
  "age": 25,
  "email": "ali@example.com"
}
```
🔹 **پاسخ:**
```json
{
  "message": "User Ali added successfully!"
}
```

---

## **3️⃣ تمرین: دریافت فایل و ارسال اطلاعات آن**
### **📌 درخواست:**  
یک **API** ایجاد کن که وقتی یک **فایل متنی** (`.txt`) آپلود می‌شود، **تعداد کاراکترهای داخل فایل را بشمارد** و در پاسخ مقدار آن را برگرداند.  

### **🎯 مثال ورودی و خروجی:**  
🔹 **ورودی:** آپلود فایلی که محتوای آن **`Hello FastAPI!`** باشد.  
🔹 **خروجی:**
```json
{
  "filename": "myfile.txt",
  "char_count": 14
}
```

---

## **4️⃣ تمرین: مدیریت خطاها در FastAPI**
### **📌 درخواست:**  
یک مسیر `/items/{item_id}` طراحی کن که اطلاعات یک آیتم را برگرداند.  
✅ اگر `item_id` در لیست آیتم‌ها نبود، باید یک **خطای `404 Not Found`** بازگردانی شود.  
✅ لیست آیتم‌های موجود:
```python
items = {"1": "Laptop", "2": "Mobile", "3": "Tablet"}
```

### **🎯 مثال درخواست و پاسخ:**  
🔹 **درخواست:** `/items/2`  
🔹 **پاسخ موفق:**
```json
{
  "item": "Mobile"
}
```
🔹 **درخواست:** `/items/5`  
🔹 **پاسخ در صورت نبودن آیتم:**
```json
{
  "detail": "Item not found"
}
```

---

## **5️⃣ تمرین: ترکیب فرم و فایل در FastAPI**
### **📌 درخواست:**  
یک **API** طراحی کن که هم‌زمان **یک فایل تصویری و یک مقدار متنی (نام کاربر)** را دریافت کند و نام فایل همراه با نام کاربر را در خروجی برگرداند.  

### **🎯 مثال ورودی و خروجی:**  
🔹 **ورودی:**  
- `username="Ali"`
- آپلود **`profile.jpg`**  

🔹 **پاسخ خروجی:**  
```json
{
  "username": "Ali",
  "filename": "profile.jpg"
}
```

---

## **6️⃣ تمرین: ارسال پاسخ سفارشی با هدر HTTP**
### **📌 درخواست:**  
یک مسیر **GET** با نام `/custom-header/` ایجاد کن که یک مقدار متنی برگرداند.  
✅ **باید یک هدر HTTP با نام `X-Message` و مقدار `"Hello FastAPI"` به پاسخ اضافه شود.**  

### **🎯 مثال خروجی:**  
🔹 **پاسخ:**  
```json
{
  "message": "Custom Header Response"
}
```
🔹 **هدر HTTP:**  
```
X-Message: Hello FastAPI
```

---

## 🎯 **سعی کن این تمرین‌ها رو حل کنی!**
✔ اگر حلشون کردی، بفرست من بررسی کنم.  
✔ اگر گیر کردی، کافیه به من بگی کدوم قسمت سخت بود تا راهنمایی کنم.  
🔥 **منتظر کدهای خفنت هستم! 😍🚀**